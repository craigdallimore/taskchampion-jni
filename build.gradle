plugins {
    id 'com.android.library' version '8.2.2'
    id 'maven-publish'
}

android {
    namespace 'com.tasksquire.data.storage'
    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libtaskchampion_jni.so'
    }
}

dependencies {
    implementation 'androidx.core:core:1.12.0'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Configure Rust build
task cargoClean(type: Exec) {
    workingDir project.projectDir
    commandLine 'cargo', 'clean'
}

task buildRustJNI(type: Exec) {
    group = 'rust'
    description = 'Build Rust JNI library for arm64-v8a only'
    workingDir project.projectDir
    commandLine 'cargo', 'ndk', '--target', 'arm64-v8a', '--platform', '26', '--', 'build'
    
    // Pass environment variables to disable assembly optimizations for aws-lc-sys
    environment 'AWS_LC_SYS_NO_ASM_aarch64_linux_android', '1'
    environment 'AWS_LC_SYS_NO_ASM', '1'
    
    // Set outputs for UP-TO-DATE checking
    outputs.file('target/aarch64-linux-android/debug/libtaskchampion_jni.so')
}

task copyRustJNI(type: Copy) {
    group = 'rust'
    description = 'Copy built Rust library to jniLibs'
    dependsOn buildRustJNI
    from 'target/aarch64-linux-android/debug/libtaskchampion_jni.so'
    into 'src/main/jniLibs/arm64-v8a/'
}

// preBuild.dependsOn copyRustLibs  // Build Rust separately first
clean.dependsOn cargoClean

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // from components.release
                
                groupId = 'io.github.craigdallimore'
                artifactId = 'taskchampion-jni'
                version = '0.1.0-alpha'
                
                pom {
                    name = 'TaskChampion JNI'
                    description = 'JNI bindings for TaskChampion task management library'
                    url = 'https://github.com/craigdallimore/taskchampion-jni'
                    
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    
                    developers {
                        developer {
                            id = 'craigdallimore'
                            name = 'Craig Dallimore'
                            email = 'decoy9697@gmail.com'
                        }
                    }
                    
                    scm {
                        connection = 'scm:git:git://github.com/craigdallimore/taskchampion-jni.git'
                        developerConnection = 'scm:git:ssh://github.com:craigdallimore/taskchampion-jni.git'
                        url = 'https://github.com/craigdallimore/taskchampion-jni/tree/main'
                    }
                }
            }
        }
    }
}